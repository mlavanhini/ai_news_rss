name: RSS News Dashboard

on:
  schedule:
    # Run daily at 6 AM
    - cron: '0 6 * * *'
  
  # Allow manual triggering of the workflow
  workflow_dispatch:

jobs:
  fetch-news:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Download NLTK data
        run: |
          python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords')"
      
      - name: Run RSS scraper
        env:
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        run: |
          echo "Starting RSS scraper at $(date)"
          python ai-rss-dashboard.py --headless --fetch-only
      
      - name: Commit and push if there are changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add news_data/*.csv
          git diff --quiet && git diff --staged --quiet || (git commit -m "Auto update: Daily RSS feed $(date)" && git push)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional job to generate summaries
  generate-summaries:
    needs: fetch-news
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Download NLTK data
        run: |
          python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords')"
      
      - name: Generate summaries
        env:
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        run: |
          echo "Generating summaries at $(date)"
          python ai-rss-dashboard.py --headless --generate-summaries
      
      - name: Commit and push summaries
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add news_summaries/*.json
          git diff --quiet && git diff --staged --quiet || (git commit -m "Auto update: Generated summaries $(date)" && git push)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
